        -:    0:Source:testCase1-bug.cpp
        -:    0:Graph:testCase1-bug.gcno
        -:    0:Data:testCase1-bug.gcda
        -:    0:Runs:3302
        -:    0:Programs:1
        -:    1:#include <iostream>                     // Preprocessor Directive
        -:    2:using namespace std;                    // Using C＋＋ Standard Libeary
        -:    3:const int n = 9;                         //The number of terms of a polynomial
    20910:    4:inline int fabs(int k)                     // Return the absolute value of k
        -:    5:{ 
    20910:    6:    return k < 0 ? -k : k;
        -:    7:}
     6604:    8:int main(void)                          // Main function
        -:    9:{ 
        -:   10:    int a[n];
     9906:   11:    while (cin >> a[0]) {               // Input coefficients
    29718:   12:        for (int i = 1; i < n; i++)  
    26416:   13:            cin >> a[i];
     3302:   14:        bool first = true;              // Set the mark for the first term
    33020:   15:        for (int i = 0; i < n; i++)
    29718:   16:            if (a[i]) {               //Output non-zero terms
    14232:   17:                if (first) {           // Deal with the first term
     3293:   18:                    if (a[i] == -1 && i < n - 1)    // The current term is -1
      151:   19:                        cout << "";
     3142:   20:                    else if (a[i] != 1 || i == n - 1)   // The current is not 1
     2972:   21:                        cout << a[i];
     3293:   22:                    if (i == n - 2) // If the exponent is 1, don’t output the exponent; else output the exponent.
        9:   23:                        cout << 'x';
     3284:   24:                    else if (i < n - 1)           
     3271:   25:                        cout << "x^" << n - i - 1;
     3293:   26:                    first = false;  // Reserve the mark of the first term of the polynomial
        -:   27:                } else {         //Output the sign and the absolute value
    10939:   28:                    cout << ' ' << (a[i] < 0 ? '-' : '+') << ' ';  //Output the sign
    10939:   29:                    if (fabs(a[i]) != 1 || i == n - 1)         //If the coefficient is 1, don’t output it
     9971:   30:                        cout << fabs(a[i]);
    10939:   31:                    if (i == n - 2)  // If the exponent is 1, don’t output the exponent; else output the exponent.
     1561:   32:                        cout << 'x';
     9378:   33:                    else if (i < n - 1)
     7793:   34:                        cout << "x^" << n - i - 1;
        -:   35:                }
        -:   36:            }
     3302:   37:        if (first)                  // If all coefficients are 0, output 0.
        9:   38:            cout << 0;
     3302:   39:        cout << endl;
        -:   40:    }
     3302:   41:    return 0;
     9906:   42:}
